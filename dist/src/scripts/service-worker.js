import{LocalStorage}from"./storage.js";import{Url}from"./url.js";import{firestore,add_data,userOnlineData}from"./firebase.js";import{eventDriven}from"./collect_data.js";var projectId,userEmail,userId,storage=new LocalStorage,userTimeline=[],trackUserInMillis=5e3,uploadDataInMillis=6e5,userOnlineDataTrackMillis=3e4,USER_TIMELINE="user_timeline",USER_OFF_SCREEN="user_off_screen",PROJECT_ID="projectId",USER_EMAIL="userEmail",USER_ID="userId";async function getCurrentTabUrl(){let e="";try{let t={active:!0,currentWindow:!0},[r]=await chrome.tabs.query(t);e=null==r?USER_OFF_SCREEN:r.url}catch(e){console.error(e)}return e}function setUserData(){storage.getValue(PROJECT_ID,(function(e){projectId=e})),storage.getValue(USER_EMAIL,(function(e){userEmail=e})),storage.getValue(USER_ID,(function(e){userId=e}))}function unsetUserData(){storage.removeValue(PROJECT_ID),storage.removeValue(USER_EMAIL),storage.removeValue(USER_ID),projectId=void 0,userEmail=void 0,userId=void 0,console.log(`user data is unset $${userId}, ${userEmail}, ${projectId}`)}async function addTabToUserTimeline(){if(setUserData(),null!=projectId&&null!=userEmail){var e=new Url(await getCurrentTabUrl()).host,t={timeStamp:Date.now(),url:e};userTimeline.push(t),storage.saveValue(USER_TIMELINE,userTimeline),showUserActivity()}}async function getCurrentTab(){let[e]=await chrome.tabs.query({active:!0,currentWindow:!0});return e}async function addData(){setUserData(),null!=projectId&&null!=userEmail&&addDataWithProjectId(projectId)}async function checkUserOnline(){setUserData(),null!=projectId&&null!=userEmail&&userOnlineData(userEmail,userId,projectId)}async function addDataWithProjectId(e){setUserData(),storage.getValue(USER_TIMELINE,(async function(t){null!=(await add_data(userEmail,userId,t,e)).id&&(userTimeline=[])}))}function trackCurrentActivity(){setInterval(addTabToUserTimeline,trackUserInMillis)}function showUserActivity(){storage.getValue(USER_TIMELINE,(function(e){})),getMemoryUsed()}function getMemoryUsed(){storage.getMemoryUse(USER_TIMELINE,(function(e){}))}function uploadData(){setInterval(addData,uploadDataInMillis)}function userOnline(){setInterval(checkUserOnline,userOnlineDataTrackMillis)}let lifeline;function keepAliveForced(){lifeline?.disconnect(),lifeline=null,keepAlive()}async function keepAlive(){if(!lifeline){for(const e of await chrome.tabs.query({url:"*://*/*"}))try{return console.log(`Keep alive function ${e.url}`),await chrome.scripting.executeScript({target:{tabId:e.id},function:()=>chrome.runtime.connect({name:"keepAlive"})}),void chrome.tabs.onUpdated.removeListener(retryOnTabUpdate)}catch(e){}chrome.tabs.onUpdated.addListener(retryOnTabUpdate)}}async function retryOnTabUpdate(e,t,r){t.url&&/^(file|https?):/.test(t.url)&&keepAlive()}console.log("firestore collection is fetched SW",firestore),unsetUserData(),trackCurrentActivity(),uploadData(),userOnline(),keepAlive(),chrome.runtime.onConnect.addListener((e=>{"keepAlive"===e.name&&(lifeline=e,setTimeout(keepAliveForced,295e3),e.onDisconnect.addListener(keepAliveForced)),"StartProject"===e.name&&e.onMessage.addListener((function(e){console.log(`StartProject msg ${e}`),storage.saveValue(PROJECT_ID,e.projectId),storage.saveValue(USER_EMAIL,e.userEmail),storage.saveValue(USER_ID,e.userId)})),"StopProject"===e.name&&(setUserData(),e.onMessage.addListener((function(e){console.log(`StopProject ${e} `)})),null!=projectId&&(console.log(`addDataWithProjectId ${projectId}`),addDataWithProjectId(projectId)),unsetUserData())}));