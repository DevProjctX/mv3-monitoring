import{LocalStorage}from"./storage.js";import{Url}from"./url.js";import{firestore,add_data}from"./firebase.js";import{eventDriven}from"./collect_data.js";var userInfo,projectId,storage=new LocalStorage,userTimeline=[],trackUserInMillis=5e3,uploadDataInMillis=6e5,USER_TIMELINE="user_timeline",USER_OFF_SCREEN="user_off_screen",PROJECT_ID="projectId";async function getCurrentTabUrl(){let e="";try{let t={active:!0,currentWindow:!0},[o]=await chrome.tabs.query(t);e=null==o?USER_OFF_SCREEN:o.url}catch(e){console.error(e)}return e}async function addTabToUserTimeline(){if(storage.getValue(PROJECT_ID,(function(e){console.log(e),projectId=e})),console.log(`projectId in addTabToUserTimeline ${projectId}`),null!=projectId){var e=new Url(await getCurrentTabUrl()).host,t={timeStamp:Date.now(),url:e};userTimeline.push(t),storage.saveValue(USER_TIMELINE,userTimeline),console.log("Added tab and timestamp to localstorage"),showUserActivity()}}async function getCurrentTab(){let[e]=await chrome.tabs.query({active:!0,currentWindow:!0});return e}async function addData(){storage.getValue(PROJECT_ID,(function(e){projectId=e})),console.log(`addData ${projectId}`),null!=projectId&&addDataWithProjectId(projectId)}async function addDataWithProjectId(e){storage.getValue(USER_TIMELINE,(function(t){chrome.identity.getProfileUserInfo((async o=>{userInfo=o;var r=await add_data(userInfo.email,t,e);console.log("Document Id is",r.id),null!=r.id&&(userTimeline=[])}))}))}function trackCurrentActivity(){setInterval(addTabToUserTimeline,trackUserInMillis)}function showUserActivity(){storage.getValue(USER_TIMELINE,(function(e){})),getMemoryUsed()}function getMemoryUsed(){storage.getMemoryUse(USER_TIMELINE,(function(e){}))}function uploadData(){setInterval(addData,uploadDataInMillis)}let lifeline;function keepAliveForced(){lifeline?.disconnect(),lifeline=null,keepAlive()}async function keepAlive(){if(!lifeline){for(const e of await chrome.tabs.query({url:"*://*/*"}))try{return await chrome.scripting.executeScript({target:{tabId:e.id},function:()=>chrome.runtime.connect({name:"keepAlive"})}),void chrome.tabs.onUpdated.removeListener(retryOnTabUpdate)}catch(e){}chrome.tabs.onUpdated.addListener(retryOnTabUpdate)}}async function retryOnTabUpdate(e,t,o){t.url&&/^(file|https?):/.test(t.url)&&keepAlive()}console.log("firestore collection is fetched SW",firestore),trackCurrentActivity(),uploadData(),keepAlive(),chrome.runtime.onConnect.addListener((e=>{"keepAlive"===e.name&&(lifeline=e,setTimeout(keepAliveForced,295e3),e.onDisconnect.addListener(keepAliveForced)),"StartProject"===e.name&&e.onMessage.addListener((function(e){storage.saveValue(PROJECT_ID,e),console.log(`item set ${e}`)})),"StopProject"===e.name&&(storage.getValue(PROJECT_ID,(function(e){projectId=e})),null!=projectId&&(console.log(`addDataWithProjectId ${projectId}`),addDataWithProjectId(projectId)),storage.removeValue(PROJECT_ID),projectId=void 0,console.log("PROJECT STOPPED"))}));